From e99ce33a81f715e03f9e5f3b2b05d9bb3e1ba8cf Mon Sep 17 00:00:00 2001
From: Zhiyao Ma <zhiyao.ma.98@gmail.com>
Date: Thu, 25 Jul 2024 16:52:01 -0400
Subject: [PATCH] Distinguish drop handlers when requesting more stack.

---
 llvm/lib/Target/ARM/ARMFrameLowering.cpp | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/llvm/lib/Target/ARM/ARMFrameLowering.cpp b/llvm/lib/Target/ARM/ARMFrameLowering.cpp
index dc4079f9055a..e30ca877553f 100644
--- a/llvm/lib/Target/ARM/ARMFrameLowering.cpp
+++ b/llvm/lib/Target/ARM/ARMFrameLowering.cpp
@@ -3405,6 +3405,23 @@ void ARMFrameLowering::adjustForSegmentedStacks(
 
 #else
 
+  // By default, the SVC number of `more_stack` is 255.
+  auto svc_num = 255;
+
+  auto func_name = MF.getName().str();
+
+  // However, if a function is a drop handler, use the number 254 for
+  // `more_stack_by_drop`.
+  if (func_name.substr(0, 12) == "_ZN4core3ptr") {
+    size_t idx = 12;
+    while (idx < func_name.length() && func_name[idx] >= '0' && func_name[idx] <= '9')
+      idx += 1;
+
+    if (func_name.substr(idx, 13) == "drop_in_place") {
+      svc_num = 254;
+    }
+  }
+
   // If r12 is live, preserve its original value before using it as the
   // scratch register.
   if (GetMBB->isLiveIn(ARM::R12)) {
@@ -3523,7 +3540,7 @@ void ARMFrameLowering::adjustForSegmentedStacks(
   }
 
   // Otherwise, call SVC
-  BuildMI(AllocMBB, DL, TII.get(ARM::tSVC)).addImm(255).add(predOps(ARMCC::AL));
+  BuildMI(AllocMBB, DL, TII.get(ARM::tSVC)).addImm(svc_num).add(predOps(ARMCC::AL));
 
   assert(AlignedStackSize < 65536);
   assert(AlignedStackSize % 4 == 0);
-- 
2.39.3 (Apple Git-146)

